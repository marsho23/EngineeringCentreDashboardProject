@using System.Security.Claims;
@model EngineeringCentreDashboardWebApp.Models.WeatherResponse

@{
    ViewData["Title"] = "Dashboard";
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>

        var user = '@ViewData["email"]';
        //var name = '@ViewData["name"]';
        //console.log(name);

        function refreshToDoList(email) {
            axios.get('https://localhost:7181/api/ToDo/getByUserLoginId?email='+email
            ).then(function (response) {
                    var data = response.data;
                    var container = document.getElementById('todoListContainer');
                    container.innerHTML = '';

                    data.forEach(todo => {
                        var row = document.createElement('tr');
                        row.innerHTML = `
                                            <td>${todo.title}</td>
                                            <td>${todo.description}</td>
                                            <td>${new Date(todo.dueDate).toLocaleDateString()}</td>
                                            <td>${todo.isCompleted}</td>
                                            <td>
                                                <button onclick="deleteToDoItem(${todo.id})">Delete</button>
                                                <button onclick="updateToDoItem(${todo.id})">Edit</button>
                                            </td>
                                        `;

                        container.appendChild(row);
                    });
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
        refreshToDoList(user);

        function deleteToDoItem(id) {
            axios.delete(`https://localhost:7181/api/ToDo/delete?id=${id}`)
                .then(function (response) {
                    console.log('Deleted item with ID:', id);
                    refreshToDoList(user);
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

  

        //refreshToDoList();  



        function updateToDoItem(id) {
            console.log('Edit item with ID:', id);
        }

        //// Function to log out from Google
        //function googleLogout() {
        //    var newWindow = window.open('https://mail.google.com/mail/?logout&hl=fr', 'Disconnect from Google', 'width=100,height=50,menubar=no,status=no,location=no,toolbar=no,scrollbars=no,top=200,left=200');
        //    setTimeout(function () {
        //        if (newWindow) newWindow.close();
        //        window.location.href = "auth/google"; 
        //    }, 3000);
        //}
        //document.getElementById("logoutForm").addEventListener("submit", function (event) {
        //    event.preventDefault(); 
        //    googleLogout();
        //    setTimeout(function () {
        //        document.getElementById("logoutForm").submit();
        //    }, 3000);
        //});
    </script>
}


<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="display-4">Today's Weather</h1>
            @if (Model.City != null)
            {
                <p class="lead">@Model.City.Name, @Model.City.Country</p>
            }
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Main Weather Information</h5>
                    <p class="card-text">Temperature: @Model.List[0].Main.Temp &#8451;</p>
                    <p class="card-text">Feels Like: @Model.List[0].Main.Feels_like &#8451;</p>
                    <p class="card-text">Pressure: @Model.List[0].Main.Pressure hPa</p>
                    <p class="card-text">Humidity: @Model.List[0].Main.Humidity %</p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Additional Weather Information</h5>
                    @foreach (var weather in Model.List[0].Weather)
                    {
                        <p class="card-text">Description: @weather.Description</p>
                        <p class="card-text">Icon: <img src="http://openweathermap.org/img/wn/@(weather.Icon)" alt="Weather Icon" /></p>
                    }
                    <p class="card-text">Clouds: @Model.List[0].Clouds.All %</p>
                    <p class="card-text">Wind Speed: @Model.List[0].Wind.Speed m/s</p>
                    <p class="card-text">Wind Direction: @Model.List[0].Wind.Deg &deg;</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col">
            <h2>To Do List</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Due Date</th>
                        <th>Is Completed</th>
                    </tr>
                </thead>
                <tbody id="todoListContainer">
                    <!-- To Do items will be inserted here -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="logout-container">
    <form id="logoutForm" asp-action="Logout" asp-controller="Weather" method="post">
        <button type="submit" class="btn btn-primary">Logout</button>
    </form>
</div>
<style>
    .logout-container {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .logout-container button {
        padding: 5px 10px;
    }
</style>
